plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.sonarqube" version '4.4.1.3373'
	id 'jacoco'
	id 'maven-publish'
}

group = 'com.github.sibmaks'
version = '0.0.4'

java {
	sourceCompatibility = "${jdk_version}"
	targetCompatibility = "${jdk_version}"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.security:spring-security-core'


	implementation group: 'org.telegram', name: 'telegrambots', version: "$lib_tg_telegrambots"
	implementation group: 'org.telegram', name: 'telegrambots-abilities', version: "$lib_tg_telegrambots"

	implementation group: 'org.apache.tika', name: 'tika-core', version: "$lib_apache_tika"

	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}

test.finalizedBy jacocoTestReport

// configure the maven publication
publishing {
	repositories {
		maven {
			name = "GitHubPackages"
			url = "https://maven.pkg.github.com/AdVitaBot/ad-vita-bot/"
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
				password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
			}
		}
	}
	publications {
		bootJava(MavenPublication) {
			artifact tasks.named("bootJar")
		}
	}
}

sonarqube {
	properties {
		property "sonar.projectKey", "AdVitaBot_ad-vita-bot"
		property "sonar.organization", "advitabot"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.java.source", "${jdk_version}"
		property "sonar.java.target", "${jdk_version}"
	}
}
